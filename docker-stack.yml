version: "3.8"

services:
  db:
    image: marekvigas/sbb-leto-db:latest
    networks:
      - backend
    env_file: db.env
    volumes: 
      - db-data:/var/lib/postgresql/data
  api:
    image: marekvigas/sbb-leto-api:latest
    networks:
      - backend
      - traefik-public
    env_file: api.env
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
      labels:
        - traefik.http.routers.leto-api.rule=Host(`leto.sbb.sk`) && PathPrefix(`/api`)
        - traefik.http.routers.leto-api.tls.certresolver=le
        - traefik.http.routers.leto-api.entrypoints=websecure
        - traefik.http.services.leto-api.loadbalancer.server.port=5000
        - traefik.http.services.leto-api.loadbalancer.healthCheck.path=/api/status
        - traefik.http.services.leto-api.loadbalancer.healthCheck.interval=5s
        - traefik.http.services.leto-api.loadbalancer.healthCheck.timeout=3s
        - traefik.docker.network=traefik-public
        - traefik.enable=true
  form:
    image: marekvigas/sbb-leto-form:latest
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.http.routers.leto-form.rule=Host(`leto.sbb.sk`)
        - traefik.http.routers.leto-form.tls.certresolver=le
        - traefik.http.routers.leto-form.entrypoints=websecure
        - traefik.http.services.leto-form.loadbalancer.server.port=80
        - traefik.docker.network=traefik-public
        - traefik.enable=true
  admin:
    image: marekvigas/sbb-leto-admin:latest
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.http.routers.leto-admin.rule=Host(`leto.sbb.sk`) && PathPrefix(`/admin`)
        - traefik.http.routers.leto-admin.tls.certresolver=le
        - traefik.http.routers.leto-admin.entrypoints=websecure
        - traefik.http.services.leto-admin.loadbalancer.server.port=80
        - traefik.docker.network=traefik-public
        - traefik.enable=true
  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin:/var/lib/pgadmin
    env_file: pgadmin.env
    ports:
     - "5050:80"
    networks:
      - backend
   
  pgbackups:
    image: prodrigestivill/postgres-backup-local:13-alpine
    user: postgres:postgres
    volumes:
      - /mnt/backups/db:/backups
    env_file: pgbackups.env

volumes: 
  db-data:
  pgadmin:

networks:
  backend:
  traefik-public:
    external: true