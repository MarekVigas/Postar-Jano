name: CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-db:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push DB
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:db"
          push: true
          tags: marekvigas/sbb-leto-db:${{ github.ref_name }}

  build-api:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push API
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:src/go-api"
          push: true
          tags: marekvigas/sbb-leto-api:${{ github.ref_name }}

  build-fe-trnavka:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push FE
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:fe"
          push: true
          tags: marekvigas/sbb-leto-form:trnavka
          build-args: |
            VITE_API_HOST=https://tabory.trnavka.sk
            VITE_RESULT_REDIRECT=https://trnavka.sk/tabory

  build-fe-sbb:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push FE
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:fe"
          push: true
          tags: marekvigas/sbb-leto-form:sbb
          build-args: |
            VITE_API_HOST=https://leto-api.salezko.sk
            VITE_RESULT_REDIRECT=https://sbb.sk/leto2023

  build-admin-sbb:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push FE
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:admin"
          push: true
          tags: marekvigas/sbb-leto-admin:sbb
          build-args: |
            REACT_APP_API_HOST=https://leto-api.salezko.sk

  be-unit-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: leto
        ports:
          - 5432:5432

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18.0' # The Go version to download (if necessary) and use.
        
    # Run build of the application
    - name: Build
      run: |
        cd src/go-api
        make build 

    - name: Unit tests
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: leto
        EMAIL_TEMPLATE_PATH: '${{ github.workspace }}/email_tabor.html'
      run: |
        cd src/go-api
        echo $EMAIL_TEMPLATE_PATH
        make test
